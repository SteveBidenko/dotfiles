#!/bin/bash

ARROW=`echo -e "\ue0b0"`
case $(tty) in /dev/tty[0-9]*)
    ARROW='' ;;
esac
ARROW=''


# function is_chroot()
# {
#     [ "$(awk '$5=="/" {print $1}' </proc/1/mountinfo)" != "$(awk '$5=="/" {print $1}' </proc/$$/mountinfo)" ] && return 0 || return 1
# }

HOSTNAME_BG_COLOR=$bakgrn
HOSTNAME_FG_COLOR=$txtgrn

function retype_command() {
    which tmux > /dev/null
    if [[ "$TMUX_PANE" != "0" ]]
    then
        tmux send-keys -t $TMUX_PANE "$1"
    fi
}

function info() {
    CODE=$?
    CMD=`fc -ln -0 | sed -re 's/^\s+//g' -e 's/\s+$//g'`
    FIRST=1

    function print_shell_simple() {
        echo "[${USER}@${HOSTNAME} ${PWD/$HOME/\/\~}]$ "
    }

    function print_tag() {
        if [[ ! -z "$TAG" ]]
        then
            echo -en "\[$bld\]\[$bldwht\]\[$bakpur\] "
            echo -n $TAG
            echo -en " \[$txtrst\]\[$txtpur\]"
            printf -v "FIRST" 0
        else
            echo -en "\[$txtgrn\]"
        fi
    }

    function print_virtualenv() {
        if [[ ! -z "$VIRTUAL_ENV" ]]
        then
            echo -en "\[$bld\]\[$bldwht\]\[$bak22\] "
            echo -n $VIRTUAL_ENV | awk -F/ '{print $(NF-1)"/"$NF}' | tr -d '\n'
            echo -en " \[$txtrst\]\[$txt22\]"
            printf -v "FIRST" 0
        elif [[ -f ".env/bin/activate" ]]
        then
            VIRTUAL_ENV=$( . .env/bin/activate; echo $VIRTUAL_ENV )
            echo -en "\[$bld\]\[$bldwht\]\[$bakred\] ! "
            echo -n $VIRTUAL_ENV | awk -F/ '{print $(NF-1)"/"$NF}' | tr -d '\n'
            echo -en " \[$txtrst\]\[$txtred\]"
            printf -v "FIRST" 0
        else
            echo -en "\[$txtgrn\]"
        fi
    }

    function print_hostname() {
        echo -en "\[$bldwht\]"
        if [[ "$UID" -eq "0" ]]
        then
            echo -en "\[$bakred\] ${HOSTNAME} "
        else
            echo -en "\[$HOSTNAME_BG_COLOR\] ${HOSTNAME} "
        fi
        echo -en "\[$txtrst\]"
    }

    function print_pwd() {
        echo -en "\[$bldwht\]"
        echo -en "\[$bakblu\] ${PWD/$HOME/\/\~} "
        echo -en "\[$txtrst\]"
    }

    function git_info() {
        NAME=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`

        echo -en "\[$bldwht\]"
        if [[ "$NAME" != "" ]]
        then
            $(git diff --quiet)

            if [[ "$?" != "0" ]]
            then
                echo -en "\[$bakylw\] \u2387  $NAME \u00B1 "
            else
                echo -en "\[$bakgrn\] \u2387  $NAME "
            fi
        fi
        echo -en "\[$txtrst\]"
    }

    function ret_info() {
        echo -en "\[$bldwht\]"
        if [[ "$CODE" != "0" ]]
        then
            if [[ "$CODE" != "130" ]]
            then
                echo -en "\[$bakred\] \u00D7 $CODE \$ \[$txtrst$txtred\]\uE0B0"
            else
                echo -en "\[$bakred\] \u00D7 \$ \[$txtrst$txtred\]\uE0B0"
            fi
        else
            echo -en "\[$bakgrn$bldwht\] \$ \[$txtrst\]\[$txtgrn\]\uE0B0"
        fi
        echo -en "\[$txtrst\]"
    }

    if [[ "$MC_SID" != "" ]]
    then
        print_shell_simple
    else
        print_tag
        print_virtualenv
        print_hostname
        print_pwd
        git_info
        ret_info
        # retry

        echo -en "\[\e[49m\]$ARROW\[$txtrst\] "

        # if [[ "$CODE" != "0" && "$CODE" != "130" ]]
        # then
        #     retype_command "$CMD"
        # fi
    fi

    # PLAIN="[$PWD]"
    # echo -ne "\[\033]0;$PLAIN\007\]"
}

function set_prompt() {
    PS1="`info`"
    # PS1="$hostname_result\[$bakblu\]\[$bldwht\] \w \[$txtrst\]$info_result "
}

PROMPT_COMMAND=set_prompt

function tag() {
    export TAG=$1
}
